name: DevSecOps CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js (for a Node.js project)
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install
      
      - name: Fix Vulnerabilities with npm audit fix
        run: npm audit fix --force

      - name: üîí SCA Scan with OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'dummy-project'
          path: '.'
          format: 'HTML'
          # This action will automatically generate a report and fail the build if vulnerabilities are found.
          
      - name: üïµÔ∏è‚Äç‚ôÄÔ∏è SAST Scan with Semgrep
        uses: semgrep/semgrep-action@v1
        id: semgrep
        with:
          publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}
          # The publishToken is optional for basic scans but required for Semgrep App features.
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
          # The action will automatically analyze your code and report findings.

      - name: Build and Test Application
        run: |
          npm run build
          npm test

  dast_scan:
    runs-on: ubuntu-latest
    needs: build_and_scan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: üåê Create a Docker network
        run: docker network create zap-network

      - name: üöÄ Start the application in a Docker container on the network
        run: |
          docker build -t my-app-image .
          docker run -d --name my-app-container --network zap-network -p 3000:3000 my-app-image
          sleep 10 # Wait for the application to be ready

      - name: üí£ DAST Scan with OWASP ZAP
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          # The target is now the container's name on the shared network
          target: 'http://my-app-container:3000'
          # Pass the network name to the ZAP action
          docker_network_name: zap-network
          cmd_options: '-a -r zap-report.html'

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html